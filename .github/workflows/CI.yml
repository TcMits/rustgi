# This file is autogenerated by maturin v1.2.0
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: build on ${{ matrix.os }} (${{ matrix.target }} - ${{ matrix.interpreter || 'all' }}${{ matrix.os == 'linux' && format(' - {0}', matrix.manylinux == 'auto' && 'manylinux' || matrix.manylinux) || '' }})
    # only run on push to main and on release
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'
    strategy:
      fail-fast: false
      matrix:
        os: [linux, macos, windows]
        target: [x86_64]
        manylinux: [auto]
        include:
          - os: linux
            manylinux: auto
            target: i686
          - os: linux
            manylinux: auto
            target: aarch64
          - os: linux
            manylinux: auto
            target: armv7
            interpreter: 3.7 3.8 3.9 3.10 3.11 3.12
          - os: linux
            manylinux: auto
            target: ppc64le
            interpreter: 3.7 3.8 3.9 3.10 3.11 3.12
          - os: linux
            manylinux: auto
            target: s390x
            interpreter: 3.7 3.8 3.9 3.10 3.11 3.12
          - os: linux
            manylinux: auto
            target: x86_64
            interpreter: pypy3.7 pypy3.8 pypy3.9 pypy3.10
          - os: linux
            manylinux: musllinux_1_1
            target: x86_64
          - os: linux
            manylinux: musllinux_1_1
            target: aarch64
          - os: macos
            target: x86_64
          - os: macos
            target: aarch64
            interpreter: 3.7 3.8 3.9 pypy3.8 pypy3.9 pypy3.10
          - os: windows
            target: x86_64
            interpreter: 3.7 3.8 3.9 3.10 3.11 3.12
          - os: windows
            target: i686
            python-architecture: x86
            interpreter: 3.7 3.8 3.9 3.10 3.11 3.12

    runs-on: ${{ (matrix.os == 'linux' && 'ubuntu') || matrix.os }}-latest
    steps:
      - uses: actions/checkout@v4

      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: ${{ matrix.python-architecture || 'x64' }}

      - run: pip install -U twine

      - name: build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux == 'manylinux' && 'auto' || matrix.manylinux }}
          args: --release --out dist --interpreter ${{ matrix.interpreter || '3.7 3.8 3.9 3.10 3.11 3.12 pypy3.7 pypy3.8 pypy3.9 pypy3.10' }}
          rust-toolchain: stable
          docker-options: -e CI
      - run: ${{ (matrix.os == 'windows' && 'dir') || 'ls -lh' }} dist/
      - run: twine check --strict dist/*
      - uses: actions/upload-artifact@v3
        with:
          name: pypi_files
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [build, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
